/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { getAvailability } from "../funcs/getAvailability.js";
import { getPaymentsId } from "../funcs/getPaymentsId.js";
import { postCollect } from "../funcs/postCollect.js";
import { postDisburse } from "../funcs/postDisburse.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Pay extends ClientSDK {
  /**
   * Get the payment (collection or disbursement) with the id specified
   */
  async getPaymentsId(
    request: operations.GetPaymentsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Payment> {
    return unwrapAsync(getPaymentsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Collect a payment from a phone number
   */
  async postCollect(
    request?: components.PaymentRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.Payment> {
    return unwrapAsync(postCollect(
      this,
      request,
      options,
    ));
  }

  /**
   * Disburse a payment from your balance to a phone number
   */
  async postDisburse(
    request?: components.PaymentRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.Payment> {
    return unwrapAsync(postDisburse(
      this,
      request,
      options,
    ));
  }

  /**
   * Get the payment (collection or disbursement) with the id specified
   */
  async getAvailability(
    options?: RequestOptions,
  ): Promise<Array<components.Availability>> {
    return unwrapAsync(getAvailability(
      this,
      options,
    ));
  }
}
